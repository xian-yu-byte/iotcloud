<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.cloud.iotcloudspring.Task.mapper.TaskMapper">
    <insert id="insertTask" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `task`
        (user_id,project_id, task_name, task_type, schedule_type, cron_expr,
         start_time, enabled, operation_config, task_description)
        VALUES (#{userId},#{projectId}, #{taskName}, #{taskType}, #{scheduleType}, #{cronExpr},
                #{startTime}, #{enabled}, #{operationConfig}, #{taskDescription})
    </insert>

    <select id="selectTaskListByProject"
            resultType="com.atguigu.cloud.iotcloudspring.Task.DTO.CreateTaskRequest.TaskListItemDTO"
            parameterType="long">
        SELECT t.id,
               t.task_name,
               t.task_type,
               t.schedule_type,
               t.enabled,
               t.next_run_time,
               t.last_run_time AS lastRunTime,
               t.status        AS status,
               t.created_time,
               (SELECT target_type
                FROM task_target
                WHERE task_id = t.id
                LIMIT 1)       AS target_type
        FROM task t
        WHERE t.project_id = #{projectId}
        ORDER BY t.created_time DESC

    </select>

    <update id="updateEnabled">
        UPDATE task SET enabled = #{enabled} WHERE id = #{id}
    </update>

    <select id="selectById" resultType="com.atguigu.cloud.iotcloudspring.Task.pojo.Task">
        SELECT *
        FROM task
        WHERE id = #{taskId}
    </select>

    <delete id="deleteTaskById">
        delete
        FROM task
        where id = #{taskId}
    </delete>

    <update id="updateById" parameterType="com.atguigu.cloud.iotcloudspring.Task.pojo.Task">
        UPDATE task
        <set>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="projectId != null">project_id = #{projectId},</if>
            <if test="taskName != null">task_name = #{taskName},</if>
            <if test="taskType != null">task_type = #{taskType},</if>
            <if test="scheduleType != null">schedule_type = #{scheduleType},</if>
            <if test="cronExpr != null">cron_expr = #{cronExpr},</if>
            <if test="startTime != null">start_time = #{startTime},</if>
            <if test="nextRunTime != null">next_run_time = #{nextRunTime},</if>
            <if test="nextRunTime == null">next_run_time = null,</if>
            <if test="lastRunTime != null">last_run_time = #{lastRunTime},</if>
            <if test="enabled != null">enabled = #{enabled},</if>
            <if test="status != null">status = #{status},</if>
            <if test="operationConfig != null">operation_config = #{operationConfig},</if>
            <if test="taskDescription != null">task_description = #{taskDescription},</if>
        </set>
        WHERE id = #{id}
    </update>

    <update id="updateStatus">
        UPDATE task
        SET status = #{status}
        WHERE id = #{id}
    </update>

    <select id="selectTaskDTOsByTaskId"
            parameterType="java.lang.Long"
            resultType="com.atguigu.cloud.iotcloudspring.Task.DTO.CreateTaskRequest.TaskDTO">
        SELECT tt.target_type     AS targetType,
               CASE tt.target_type
                   WHEN 'DEVICE' THEN d.devicename
                   WHEN 'TYPE' THEN dt.typename
                   END            AS Device,
               t.task_name        AS taskName,
               t.next_run_time    AS nextRunTime,
               t.created_time     AS createdTime,
               t.updated_time     AS updatedTime,
               t.task_type        AS taskType,
               t.operation_config AS operationConfig,
               t.enabled          AS enabled
        FROM task t
                 JOIN task_target tt
                      ON t.id = tt.task_id
                 LEFT JOIN device d
                           ON tt.target_type = 'DEVICE'
                               AND tt.target_id = d.id
                 LEFT JOIN devicetype dt
                           ON tt.target_type = 'TYPE'
                               AND tt.target_id = dt.id
        WHERE t.id = #{taskId}
        ORDER BY tt.id
    </select>


</mapper>